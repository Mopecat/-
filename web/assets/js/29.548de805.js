(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{227:function(e,s,a){"use strict";a.r(s);var v=a(0),t=Object(v.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[e._v("#")]),e._v(" npm")]),e._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("nrm")]),e._v(" 源管理")]),e._v(" "),a("li",[a("code",[e._v("nvm")]),e._v(" 版本管理")]),e._v(" "),a("li",[a("code",[e._v("npm")]),e._v(" 包管理")])]),e._v(" "),a("h2",{attrs:{id:"初始化包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化包"}},[e._v("#")]),e._v(" 初始化包")]),e._v(" "),a("p",[e._v("package.json")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" init\n// "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" init -y 直接生成默认的package.json\n")])])]),a("h2",{attrs:{id:"下载包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载包"}},[e._v("#")]),e._v(" 下载包")]),e._v(" "),a("ul",[a("li",[e._v("全局安装 => 任意目录下的命令行中使用")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i http-server -g\n")])])]),a("h2",{attrs:{id:"写一个全局命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写一个全局命令"}},[e._v("#")]),e._v(" 写一个全局命令")]),e._v(" "),a("p",[e._v("在"),a("code",[e._v("package.json")]),e._v("里面，添加"),a("code",[e._v("bin")]),e._v("字段")]),e._v(" "),a("p",[e._v("本地调试命令，在对应目录下执行 "),a("code",[e._v("npm link")]),e._v(" 创建快捷方式指向文件 如目录下的"),a("code",[e._v("package.json")]),e._v(" 会形成下面的映射路径")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("/usr/local/bin/feely -"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /usr/local/lib/node_modules/feely-test/bin/www\n/usr/local/lib/node_modules/feely-test -"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /Users/liuyang/Documents/github/FEE-Advance-Summary/npm\n")])])]),a("ul",[a("li",[e._v("本地安装")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" jquery --save / -S\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" webpack --save-dev / -D\n")])])]),a("p",[a("code",[e._v("--save")]),e._v(" 会安装到 "),a("code",[e._v("dependencies")]),e._v(" => 表示上线和开发的时候都需要")]),e._v(" "),a("p",[a("code",[e._v("--save-dev / -D")]),e._v(" 会安装到 "),a("code",[e._v("devDependencies")]),e._v(" => 开发依赖， 上线的时候不需要")]),e._v(" "),a("blockquote",[a("p",[e._v("区别就是 有一天模块发布了 ，别人安装我发布的模块时 "),a("code",[e._v("devDependencies")]),e._v(" 中的模块是不会被下载的\n"),a("code",[e._v("npm install --production")]),e._v(" 可以只安装 dependencies")])]),e._v(" "),a("h2",{attrs:{id:"依赖项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖项"}},[e._v("#")]),e._v(" 依赖项")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("dependencies")]),e._v(": 表示上线和开发的时候都需要")]),e._v(" "),a("li",[a("code",[e._v("devDependencies")]),e._v(": 开发依赖， 上线的时候不需要")]),e._v(" "),a("li",[a("code",[e._v("peerDependencies")]),e._v(": 会提示你安装缺少的模块，默认要求带版本，如果版本不一致就会提示 "),a("code",[e._v("warn")])]),e._v(" "),a("li",[a("code",[e._v("bundledDependencies")]),e._v(": 打包的依赖项，执行"),a("code",[e._v("npm pack")]),e._v("时，会将"),a("code",[e._v("bundledDependencies")]),e._v("所写的依赖打包到"),a("code",[e._v("tgz")]),e._v("压缩包中，不写则不打包（不常用）")]),e._v(" "),a("li",[a("code",[e._v("optionalDependencies")]),e._v(": 可选依赖，即当前引用依赖下载时如果没有下载到这个包也会继续下载其他不会中断，也就是这个包可有可无，也就是说我们可能在代码里面兼容处理了这个包，比如如果有这个包就用这个，没有就用其他的")])]),e._v(" "),a("h2",{attrs:{id:"清空缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清空缓存"}},[e._v("#")]),e._v(" 清空缓存")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" cache clean --force\n")])])]),a("h2",{attrs:{id:"打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[e._v("#")]),e._v(" 打包")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" pack\n")])])]),a("h2",{attrs:{id:"版本问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本问题"}},[e._v("#")]),e._v(" 版本问题")]),e._v(" "),a("p",[e._v("1.0.0")]),e._v(" "),a("ul",[a("li",[e._v("第一位 表示不兼容老代码，大规模的更新")]),e._v(" "),a("li",[e._v("第二位 表示增加了一些功能")]),e._v(" "),a("li",[e._v("第三位 表示小的补丁（改了一些 bug）")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" version patch // 第三位+1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" version minor // 第二位+1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" version major // 第一位+1\n")])])]),a("p",[e._v("执行上述代码可以同步"),a("code",[e._v("git tag")])]),e._v(" "),a("p",[e._v("^2.0.0 "),a("code",[e._v("^")]),e._v("控制第一位版本 本例是不到 3，不能小于 2 => 2.0.1 / 2.2.2 这样的都可以\n~2.1.0 "),a("code",[e._v("~")]),e._v("控制的是第二位版本 本例是 不超过 1 => 2.1.2 ok")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("alpha")]),e._v(" => 内部测试版本")]),e._v(" "),a("li",[a("code",[e._v("beta")]),e._v(" => 公开测试版本")]),e._v(" "),a("li",[a("code",[e._v("rc")]),e._v(" => 基本 ok 了")])]),e._v(" "),a("h2",{attrs:{id:"协议问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协议问题"}},[e._v("#")]),e._v(" 协议问题")]),e._v(" "),a("p",[e._v("开源软件一般就选择 "),a("code",[e._v("MIT")]),e._v(" 协议")]),e._v(" "),a("p",[a("img",{attrs:{src:"licenses.png",alt:"开源协议选择"}})]),e._v(" "),a("h2",{attrs:{id:"scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripts"}},[e._v("#")]),e._v(" scripts")]),e._v(" "),a("p",[e._v("可以用"),a("code",[e._v("scripts")]),e._v(" 配置执行的脚本")]),e._v(" "),a("p",[e._v("1） 执行命令 "),a("code",[e._v("echo XXXX")]),e._v(" 输出这一类的")]),e._v(" "),a("p",[e._v("2） 执行 "),a("code",[e._v("node_modules/.bin")]),e._v("目录下的文件")]),e._v(" "),a("p",[e._v("当执行 "),a("code",[e._v("npm run")]),e._v("的时候 会把当前目录"),a("code",[e._v("node_modules/.bin")]),e._v("也拷贝到当前系统的 "),a("code",[e._v("path")]),e._v(" 中(用完就删掉)，所以 "),a("code",[e._v("npm run")]),e._v(" 可以执行"),a("code",[e._v(".bin")]),e._v("下的文件")]),e._v(" "),a("h2",{attrs:{id:"npx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[e._v("#")]),e._v(" npx")]),e._v(" "),a("p",[e._v("可以直接执行 "),a("code",[e._v("node_modules/.bin")]),e._v(" 目录下的文件，不需要去配 "),a("code",[e._v("scripts")])]),e._v(" "),a("blockquote",[a("p",[e._v("优点：如果执行的模块不存在，会自动安装，安装完执行完毕后自动销毁，避免安装全局模块。比如："),a("code",[e._v("npx create-react-app project-name")])])]),e._v(" "),a("h2",{attrs:{id:"发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[e._v("#")]),e._v(" 发布")]),e._v(" "),a("ol",[a("li",[e._v("登录 "),a("code",[e._v("npm login")])]),e._v(" "),a("li",[e._v("发布 "),a("code",[e._v("npm publish")])])])])}),[],!1,null,null,null);s.default=t.exports}}]);